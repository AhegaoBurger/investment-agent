preExistingSafe Safe {
  getSafeMessageHash: [AsyncFunction (anonymous)],
  isValidSignature: [AsyncFunction (anonymous)],
  getContractInfo: [Function (anonymous)]
}
user 0x6485A7046704ca7127B6D9Db3a3519F41C4976c0
args [
  '0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0',
  0n,
  '0x6485A7046704ca7127B6D9Db3a3519F41C4976c0',
  0
]
transaction created EthSafeTransaction {
  signatures: Map(0) {},
  data: {
    to: '0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951',
    value: '0',
    data: '0x617ba037000000000000000000000000aa8e23fb1079ea71e0a56f48a2aa51851d8433d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006485a7046704ca7127b6d9db3a3519f41c4976c00000000000000000000000000000000000000000000000000000000000000000',
    operation: 0,
    baseGas: '0',
    gasPrice: '0',
    gasToken: '0x0000000000000000000000000000000000000000',
    refundReceiver: '0x0000000000000000000000000000000000000000',
    nonce: 1,
    safeTxGas: '0'
  }
}
transaction executed EthSafeTransaction {
  signatures: Map(0) {},
  data: {
    to: '0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951',
    value: '0',
    data: '0x617ba037000000000000000000000000aa8e23fb1079ea71e0a56f48a2aa51851d8433d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006485a7046704ca7127b6d9db3a3519f41c4976c00000000000000000000000000000000000000000000000000000000000000000',
    operation: 0,
    baseGas: '0',
    gasPrice: '0',
    gasToken: '0x0000000000000000000000000000000000000000',
    refundReceiver: '0x0000000000000000000000000000000000000000',
    nonce: 1,
    safeTxGas: '0'
  }
}

/home/artur/Documents/Code/eliza/node_modules/solc/soljson.js:133
    process["on"]("unhandledRejection", function (reason) { throw reason; });
                                                            ^

ContractFunctionExecutionError: The contract function "execTransaction" reverted with the following reason:
GS013

Contract Call:
  address:   0x6485A7046704ca7127B6D9Db3a3519F41C4976c0
  function:  execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures)
  args:                     (0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951, 0, 0x617ba037000000000000000000000000aa8e23fb1079ea71e0a56f48a2aa51851d8433d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006485a7046704ca7127b6d9db3a3519f41c4976c00000000000000000000000000000000000000000000000000000000000000000, 0, 0, 0, 0, 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0x000000000000000000000000bae3ef488949f236f967796AB1Ec262f97F44E78000000000000000000000000000000000000000000000000000000000000000001)
  sender:    0xbae3ef488949f236f967796AB1Ec262f97F44E78

Docs: https://viem.sh/docs/contract/estimateContractGas
Version: viem@2.21.58
    at getContractError (/home/artur/Documents/Code/eliza/node_modules/viem/_cjs/utils/errors/getContractError.js:33:12)
    at estimateContractGas (/home/artur/Documents/Code/eliza/node_modules/viem/_cjs/actions/public/estimateContractGas.js:26:58)
    ... 2 lines matching cause stack trace ...
    at async Safe.executeTransaction (/home/artur/Documents/Code/eliza/node_modules/@safe-global/protocol-kit/dist/src/Safe.js:1093:28) {
  cause: ContractFunctionRevertedError: The contract function "execTransaction" reverted with the following reason:
  GS013

  Version: viem@2.21.58
      at /home/artur/Documents/Code/eliza/node_modules/viem/_cjs/utils/errors/getContractError.js:22:20
      at getContractError (/home/artur/Documents/Code/eliza/node_modules/viem/_cjs/utils/errors/getContractError.js:32:7)
      at estimateContractGas (/home/artur/Documents/Code/eliza/node_modules/viem/_cjs/actions/public/estimateContractGas.js:26:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async SafeContract_v1_4_1.execTransaction (/home/artur/Documents/Code/eliza/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.4.1/SafeContract_v1_4_1.js:205:14)
      at async Safe.executeTransaction (/home/artur/Documents/Code/eliza/node_modules/@safe-global/protocol-kit/dist/src/Safe.js:1093:28) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "execTransaction" reverted with the following reason:\n' +
      'GS013',
    version: '2.21.58',
    data: {
      abiItem: {
        inputs: [ { name: 'message', type: 'string' } ],
        name: 'Error',
        type: 'error'
      },
      args: [ 'GS013' ],
      errorName: 'Error'
    },
    reason: 'GS013',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/estimateContractGas',
  metaMessages: [
    'Contract Call:',
    '  address:   0x6485A7046704ca7127B6D9Db3a3519F41C4976c0\n' +
      '  function:  execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures)\n' +
      '  args:                     (0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951, 0, 0x617ba037000000000000000000000000aa8e23fb1079ea71e0a56f48a2aa51851d8433d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006485a7046704ca7127b6d9db3a3519f41c4976c00000000000000000000000000000000000000000000000000000000000000000, 0, 0, 0, 0, 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0x000000000000000000000000bae3ef488949f236f967796AB1Ec262f97F44E78000000000000000000000000000000000000000000000000000000000000000001)\n' +
      '  sender:    0xbae3ef488949f236f967796AB1Ec262f97F44E78'
  ],
  shortMessage: 'The contract function "execTransaction" reverted with the following reason:\n' +
    'GS013',
  version: '2.21.58',
  abi: [
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address'
        }
      ],
      name: 'AddedOwner',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'approvedHash',
          type: 'bytes32'
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address'
        }
      ],
      name: 'ApproveHash',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'handler',
          type: 'address'
        }
      ],
      name: 'ChangedFallbackHandler',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'guard',
          type: 'address'
        }
      ],
      name: 'ChangedGuard',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'threshold',
          type: 'uint256'
        }
      ],
      name: 'ChangedThreshold',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'module',
          type: 'address'
        }
      ],
      name: 'DisabledModule',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'module',
          type: 'address'
        }
      ],
      name: 'EnabledModule',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'txHash',
          type: 'bytes32'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'payment',
          type: 'uint256'
        }
      ],
      name: 'ExecutionFailure',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'module',
          type: 'address'
        }
      ],
      name: 'ExecutionFromModuleFailure',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'module',
          type: 'address'
        }
      ],
      name: 'ExecutionFromModuleSuccess',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'txHash',
          type: 'bytes32'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'payment',
          type: 'uint256'
        }
      ],
      name: 'ExecutionSuccess',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address'
        }
      ],
      name: 'RemovedOwner',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'module',
          type: 'address'
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'to',
          type: 'address'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'value',
          type: 'uint256'
        },
        {
          indexed: false,
          internalType: 'bytes',
          name: 'data',
          type: 'bytes'
        },
        {
          indexed: false,
          internalType: 'enum Enum.Operation',
          name: 'operation',
          type: 'uint8'
        }
      ],
      name: 'SafeModuleTransaction',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'to',
          type: 'address'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'value',
          type: 'uint256'
        },
        {
          indexed: false,
          internalType: 'bytes',
          name: 'data',
          type: 'bytes'
        },
        {
          indexed: false,
          internalType: 'enum Enum.Operation',
          name: 'operation',
          type: 'uint8'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'safeTxGas',
          type: 'uint256'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'baseGas',
          type: 'uint256'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'gasPrice',
          type: 'uint256'
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'gasToken',
          type: 'address'
        },
        {
          indexed: false,
          internalType: 'address payable',
          name: 'refundReceiver',
          type: 'address'
        },
        {
          indexed: false,
          internalType: 'bytes',
          name: 'signatures',
          type: 'bytes'
        },
        {
          indexed: false,
          internalType: 'bytes',
          name: 'additionalInfo',
          type: 'bytes'
        }
      ],
      name: 'SafeMultiSigTransaction',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'sender',
          type: 'address'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'value',
          type: 'uint256'
        }
      ],
      name: 'SafeReceived',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'initiator',
          type: 'address'
        },
        {
          indexed: false,
          internalType: 'address[]',
          name: 'owners',
          type: 'address[]'
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'threshold',
          type: 'uint256'
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'initializer',
          type: 'address'
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'fallbackHandler',
          type: 'address'
        }
      ],
      name: 'SafeSetup',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'msgHash',
          type: 'bytes32'
        }
      ],
      name: 'SignMsg',
      type: 'event'
    },
    { stateMutability: 'nonpayable', type: 'fallback' },
    {
      inputs: [],
      name: 'VERSION',
      outputs: [ { internalType: 'string', name: '', type: 'string' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'owner', type: 'address' },
        {
          internalType: 'uint256',
          name: '_threshold',
          type: 'uint256'
        }
      ],
      name: 'addOwnerWithThreshold',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'hashToApprove',
          type: 'bytes32'
        }
      ],
      name: 'approveHash',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: '', type: 'address' },
        { internalType: 'bytes32', name: '', type: 'bytes32' }
      ],
      name: 'approvedHashes',
      outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '_threshold',
          type: 'uint256'
        }
      ],
      name: 'changeThreshold',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'bytes32', name: 'dataHash', type: 'bytes32' },
        { internalType: 'bytes', name: 'data', type: 'bytes' },
        { internalType: 'bytes', name: 'signatures', type: 'bytes' },
        {
          internalType: 'uint256',
          name: 'requiredSignatures',
          type: 'uint256'
        }
      ],
      name: 'checkNSignatures',
      outputs: [],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'bytes32', name: 'dataHash', type: 'bytes32' },
        { internalType: 'bytes', name: 'data', type: 'bytes' },
        { internalType: 'bytes', name: 'signatures', type: 'bytes' }
      ],
      name: 'checkSignatures',
      outputs: [],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'prevModule',
          type: 'address'
        },
        { internalType: 'address', name: 'module', type: 'address' }
      ],
      name: 'disableModule',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'domainSeparator',
      outputs: [ { internalType: 'bytes32', name: '', type: 'bytes32' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [ { internalType: 'address', name: 'module', type: 'address' } ],
      name: 'enableModule',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'to', type: 'address' },
        { internalType: 'uint256', name: 'value', type: 'uint256' },
        { internalType: 'bytes', name: 'data', type: 'bytes' },
        {
          internalType: 'enum Enum.Operation',
          name: 'operation',
          type: 'uint8'
        },
        { internalType: 'uint256', name: 'safeTxGas', type: 'uint256' },
        { internalType: 'uint256', name: 'baseGas', type: 'uint256' },
        { internalType: 'uint256', name: 'gasPrice', type: 'uint256' },
        { internalType: 'address', name: 'gasToken', type: 'address' },
        {
          internalType: 'address',
          name: 'refundReceiver',
          type: 'address'
        },
        { internalType: 'uint256', name: '_nonce', type: 'uint256' }
      ],
      name: 'encodeTransactionData',
      outputs: [ { internalType: 'bytes', name: '', type: 'bytes' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'to', type: 'address' },
        { internalType: 'uint256', name: 'value', type: 'uint256' },
        { internalType: 'bytes', name: 'data', type: 'bytes' },
        {
          internalType: 'enum Enum.Operation',
          name: 'operation',
          type: 'uint8'
        },
        { internalType: 'uint256', name: 'safeTxGas', type: 'uint256' },
        { internalType: 'uint256', name: 'baseGas', type: 'uint256' },
        { internalType: 'uint256', name: 'gasPrice', type: 'uint256' },
        { internalType: 'address', name: 'gasToken', type: 'address' },
        {
          internalType: 'address payable',
          name: 'refundReceiver',
          type: 'address'
        },
        { internalType: 'bytes', name: 'signatures', type: 'bytes' }
      ],
      name: 'execTransaction',
      outputs: [ { internalType: 'bool', name: '', type: 'bool' } ],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'to', type: 'address' },
        { internalType: 'uint256', name: 'value', type: 'uint256' },
        { internalType: 'bytes', name: 'data', type: 'bytes' },
        {
          internalType: 'enum Enum.Operation',
          name: 'operation',
          type: 'uint8'
        }
      ],
      name: 'execTransactionFromModule',
      outputs: [ { internalType: 'bool', name: 'success', type: 'bool' } ],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'to', type: 'address' },
        { internalType: 'uint256', name: 'value', type: 'uint256' },
        { internalType: 'bytes', name: 'data', type: 'bytes' },
        {
          internalType: 'enum Enum.Operation',
          name: 'operation',
          type: 'uint8'
        }
      ],
      name: 'execTransactionFromModuleReturnData',
      outputs: [
        { internalType: 'bool', name: 'success', type: 'bool' },
        { internalType: 'bytes', name: 'returnData', type: 'bytes' }
      ],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'getChainId',
      outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'start', type: 'address' },
        { internalType: 'uint256', name: 'pageSize', type: 'uint256' }
      ],
      name: 'getModulesPaginated',
      outputs: [
        { internalType: 'address[]', name: 'array', type: 'address[]' },
        { internalType: 'address', name: 'next', type: 'address' }
      ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'getOwners',
      outputs: [ { internalType: 'address[]', name: '', type: 'address[]' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'offset', type: 'uint256' },
        { internalType: 'uint256', name: 'length', type: 'uint256' }
      ],
      name: 'getStorageAt',
      outputs: [ { internalType: 'bytes', name: '', type: 'bytes' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'getThreshold',
      outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'to', type: 'address' },
        { internalType: 'uint256', name: 'value', type: 'uint256' },
        { internalType: 'bytes', name: 'data', type: 'bytes' },
        {
          internalType: 'enum Enum.Operation',
          name: 'operation',
          type: 'uint8'
        },
        { internalType: 'uint256', name: 'safeTxGas', type: 'uint256' },
        { internalType: 'uint256', name: 'baseGas', type: 'uint256' },
        { internalType: 'uint256', name: 'gasPrice', type: 'uint256' },
        { internalType: 'address', name: 'gasToken', type: 'address' },
        {
          internalType: 'address',
          name: 'refundReceiver',
          type: 'address'
        },
        { internalType: 'uint256', name: '_nonce', type: 'uint256' }
      ],
      name: 'getTransactionHash',
      outputs: [ { internalType: 'bytes32', name: '', type: 'bytes32' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [ { internalType: 'address', name: 'module', type: 'address' } ],
      name: 'isModuleEnabled',
      outputs: [ { internalType: 'bool', name: '', type: 'bool' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [ { internalType: 'address', name: 'owner', type: 'address' } ],
      name: 'isOwner',
      outputs: [ { internalType: 'bool', name: '', type: 'bool' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'nonce',
      outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'prevOwner', type: 'address' },
        { internalType: 'address', name: 'owner', type: 'address' },
        {
          internalType: 'uint256',
          name: '_threshold',
          type: 'uint256'
        }
      ],
      name: 'removeOwner',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [ { internalType: 'address', name: 'handler', type: 'address' } ],
      name: 'setFallbackHandler',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [ { internalType: 'address', name: 'guard', type: 'address' } ],
      name: 'setGuard',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [
        {
          internalType: 'address[]',
          name: '_owners',
          type: 'address[]'
        },
        {
          internalType: 'uint256',
          name: '_threshold',
          type: 'uint256'
        },
        { internalType: 'address', name: 'to', type: 'address' },
        { internalType: 'bytes', name: 'data', type: 'bytes' },
        {
          internalType: 'address',
          name: 'fallbackHandler',
          type: 'address'
        },
        {
          internalType: 'address',
          name: 'paymentToken',
          type: 'address'
        },
        { internalType: 'uint256', name: 'payment', type: 'uint256' },
        {
          internalType: 'address payable',
          name: 'paymentReceiver',
          type: 'address'
        }
      ],
      name: 'setup',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [ { internalType: 'bytes32', name: '', type: 'bytes32' } ],
      name: 'signedMessages',
      outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'targetContract',
          type: 'address'
        },
        {
          internalType: 'bytes',
          name: 'calldataPayload',
          type: 'bytes'
        }
      ],
      name: 'simulateAndRevert',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [
        { internalType: 'address', name: 'prevOwner', type: 'address' },
        { internalType: 'address', name: 'oldOwner', type: 'address' },
        { internalType: 'address', name: 'newOwner', type: 'address' }
      ],
      name: 'swapOwner',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    { stateMutability: 'payable', type: 'receive' }
  ],
  args: [
    '0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951',
    0n,
    '0x617ba037000000000000000000000000aa8e23fb1079ea71e0a56f48a2aa51851d8433d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006485a7046704ca7127b6d9db3a3519f41c4976c00000000000000000000000000000000000000000000000000000000000000000',
    0,
    0n,
    0n,
    0n,
    '0x0000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000',
    '0x000000000000000000000000bae3ef488949f236f967796AB1Ec262f97F44E78000000000000000000000000000000000000000000000000000000000000000001'
  ],
  contractAddress: '0x6485A7046704ca7127B6D9Db3a3519F41C4976c0',
  formattedArgs: undefined,
  functionName: 'execTransaction',
  sender: '0xbae3ef488949f236f967796AB1Ec262f97F44E78'
}

Node.js v23.3.0
/home/artur/Documents/Code/eliza/agent:
 ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.9 start: `node --loader ts-node/esm src/index.ts "--isRoot" "--character=characters/trump.character.json"`
Exit status 1
 ELIFECYCLE  Command failed with exit code 1.

